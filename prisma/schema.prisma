// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ==================== USER MODULE ====================
model User {
  id        String   @id @default(cuid())
  email     String   @unique @db.VarChar(255)
  username  String   @unique @db.VarChar(100)
  password  String   @db.VarChar(255)
  nama      String   @db.VarChar(255)
  role      Role     @default(KARYAWAN)
  aktif     Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  transaksi Transaction[]

  @@map("users")
  @@index([email])
  @@index([username])
}

enum Role {
  ADMIN
  KARYAWAN
}

// ==================== PRODUCT MODULE ====================
model Product {
  id           String   @id @default(cuid())
  kodeBarang   String   @unique @db.VarChar(100)
  namaBarang   String   @db.VarChar(255)
  deskripsi    String?  @db.Text
  kategori     String   @db.VarChar(100)
  satuan       String   @db.VarChar(50)
  stokMinimal  Int      @default(10)
  stokSaatIni  Int      @default(0)
  hargaBeli    Decimal  @db.Decimal(15, 2)
  hargaJual    Decimal  @db.Decimal(15, 2)
  lokasi       String?  @db.VarChar(255)
  gambar       String?  @db.VarChar(500)
  aktif        Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  transaksi Transaction[]

  @@map("products")
  @@index([kodeBarang])
  @@index([kategori])
}

// ==================== TRANSACTION MODULE ====================
model Transaction {
  id              String          @id @default(cuid())
  nomorTransaksi  String          @unique @db.VarChar(100)
  productId       String
  tipeTransaksi   TipeTransaksi
  jumlah          Int
  harga           Decimal         @db.Decimal(15, 2)
  totalHarga      Decimal         @db.Decimal(15, 2)
  pihakTerkait    String?         @db.VarChar(255)
  tanggal         DateTime        @default(now())
  keterangan      String?         @db.Text
  userId          String
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("transactions")
  @@index([productId])
  @@index([userId])
  @@index([tanggal])
  @@index([tipeTransaksi])
}

enum TipeTransaksi {
  MASUK
  KELUAR
}

// ==================== LAPORAN & NOTIFIKASI ====================
model LaporanStok {
  id          String   @id @default(cuid())
  bulan       Int
  tahun       Int
  totalBarang Int
  totalNilai  Decimal  @db.Decimal(15, 2)
  dataLaporan Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([bulan, tahun])
  @@map("laporan_stoks")
  @@index([tahun, bulan])
}

model Notifikasi {
  id        String   @id @default(cuid())
  productId String
  pesan     String   @db.Text
  dibaca    Boolean  @default(false)
  createdAt DateTime @default(now())

  @@map("notifikasis")
  @@index([productId])
  @@index([dibaca])
}